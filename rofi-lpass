#!/bin/bash
set -e
set -o pipefail

SESSION_TYPE=x11
CAN_TYPE=false
if [[ -n "$WAYLAND_DISPLAY" ]]; then
  SESSION_TYPE=wayland
  export LPASS_CLIPBOARD_COMMAND=wl-copy
  if hash wtype; then
    CAN_TYPE=true
  fi
else
  if hash xvkbd || hash xdotool; then
    CAN_TYPE=true
  fi
fi

print-account-list() {
  lpass ls --format "%/as%ag - %an (%au) [%ai]" 2>&1
}

type-account-field() {
# Close stdout and stderr to stop this process from dying when the parent ends
  exec 1>/dev/null 2>/dev/null

  local value=$(lpass show --quiet -j "$1" | jq ".[0][\"$2\"]" -r)
  case "$SESSION_TYPE" in
    x11)
      if hash xvkbd 2>/dev/null; then
        xvkbd -xsendevent -text "$value"
      else
        local active_window=$(xdotool getactivewindow)
        xdotool windowactivate --sync "$active_window" type --clearmodifiers "$value"
      fi
      ;;
    wayland)
      wtype "$value"
      ;;
  esac
}

copy-account-field() {
  case "$SESSION_TYPE" in
    x11)
      lpass show --quiet -j "$1" | jq ".[0][\"$2\"]" -r | tr -d '\n' | xsel -ib -t 30000
      ;;
    wayland)
      lpass show --quiet -j "$1" | jq ".[0][\"$2\"]" -r | tr -d '\n' | CLIPBOARD_STATE=sensitive wl-copy -o
      ;;
  esac
}

open-account-url() {
  local url=$(lpass show --url "$1")
  if [[ -n "$url" ]]; then
    xdg-open "$url" >/dev/null 2>/dev/null
  else
    exit 2
  fi
}

is-actual-url() {
  local url="$1"
  if [[ -n "$url" && "$url" != " " && "$url" != "http://" && "$url" != "https://" ]]; then
    return 0
  else
    return 1
  fi
}

show-account-options() {
  local id="$1"

  # Find names of fields that aren't empty and aren't default fields.
  #TODO: Sort password and username first before all other fields!
  local fields=($(lpass show "$id" -j | jq '.[0] | map_values(select(. != "")) | keys | map(select(inside("id,name,fullname,last_modified_gmt,last_touch,group") | not))[]' -r))

  if "$CAN_TYPE"; then
    for field in "${fields[@]}"; do
      echo ">> Type $field [$id]"
    done
  fi

  for field in "${fields[@]}"; do
    echo ">> Copy $field [$id]"
  done

  url=$(lpass show --url "$id")
  if is-actual-url "$url"; then
    echo ">> Open $url [$id]"
  fi

  echo ">> Copy ID [$id]"
}

is-entry-selected() {
  if [[ -n "$@" ]]; then
    return 0
  else
    return 1
  fi
}

id-in-selection() {
  echo "$1" | grep -oE '\[[0-9]+\]$' | tr -d '[]'
}

debug() {
  echo "$@" > /dev/stderr
}

if is-entry-selected "$1"; then
  selected="$1"

  id="$(id-in-selection "$selected")"

  field=$(echo "$selected" | awk '{print $3}')

  if [[ -n "$id" ]]; then
    case "$selected" in
      '>> Copy ID'*)
        copy-account-field "$id" id ;;
      '>> Open'*)
        open-account-url "$id" ;;
      '>> Type '*)
        type-account-field "$id" "$field" & ;;
      '>> Copy '*)
        copy-account-field "$id" "$field" ;;
      *)
        show-account-options "$id" ;;
    esac
  else
    echo "Could not detect the entry ID of \"${selection}\""
    exit 1
  fi
else
  print-account-list
fi
